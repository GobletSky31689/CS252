CompilationUnit Nothing [ImportDecl False (Name [Identifier "java",Identifier "lang",Identifier "System"]) True] (ClassDecl [Public] (Name [Identifier "test"]) (ClassBody [MethodDecl [Public,Static] (PrimType VoidType) (Name [Identifier "main"]) [FormalParameterDecl False (ClassRefType (Identifier "String[]")) (Name [Identifier "args"])] (Sequence (Declare (VarDecl (PrimType IntType) (Name [Identifier "a"])) (Just (Lit (Int 3)))) (Sequence (Declare (VarDecl (PrimType IntType) (Name [Identifier "b"])) (Just (Lit (Int 1)))) (Sequence (Declare (VarDecl (PrimType IntType) (Name [Identifier "sum"])) (Just (MethodExp (Name [Identifier "add"]) [ArgumentDecl (Name [Identifier "a"]),ArgumentDecl (Name [Identifier "b"])]))) (Sequence (MethodCall (MethodExp (Name [Identifier "System",Identifier "out",Identifier "println"]) [ArgumentDecl (Name [Identifier "sum"])])) (Sequence (Declare (VarDecl (PrimType IntType) (Name [Identifier "diff"])) (Just (MethodExp (Name [Identifier "subtract"]) [ArgumentDecl (Name [Identifier "a"]),ArgumentDecl (Name [Identifier "b"])]))) (MethodCall (MethodExp (Name [Identifier "System",Identifier "out",Identifier "println"]) [ArgumentDecl (Name [Identifier "diff"])]))))))),MethodDecl [Public,Static] (PrimType IntType) (Name [Identifier "add"]) [FormalParameterDecl False (PrimType IntType) (Name [Identifier "x"]),FormalParameterDecl False (PrimType IntType) (Name [Identifier "y"])] (Sequence (Declare (VarDecl (PrimType IntType) (Name [Identifier "c"])) (Just (Op Plus (Var (VarAcc (Name [Identifier "x"]))) (Var (VarAcc (Name [Identifier "y"])))))) (Return (Var (VarAcc (Name [Identifier "c"]))))),MethodDecl [Public,Static] (PrimType IntType) (Name [Identifier "subtract"]) [FormalParameterDecl False (PrimType IntType) (Name [Identifier "x"]),FormalParameterDecl False (PrimType IntType) (Name [Identifier "y"])] (Sequence (Declare (VarDecl (PrimType IntType) (Name [Identifier "c"])) (Just (Op Minus (Var (VarAcc (Name [Identifier "x"]))) (Var (VarAcc (Name [Identifier "y"])))))) (Return (Var (VarAcc (Name [Identifier "c"])))))]))